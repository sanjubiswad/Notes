git problem
------------
1.fatal: unable to access 'https://github.com/sanjubiswad/old.git/': SSL 
certificate problem: unable to get local issuer certificate --
(execute this command)
-> git config --global http.sslbackend schannel

2.sometimes origin will not work,  then try this (specially line 14)
----------------------
git remote set-url origin git@github.com:sanjubiswad/notes.git

ssh-keygen -t ed25519 -C "sanjubiswad853@gmail.com"

git branch -M main
git remote add origin https://github.com/sanjubiswad/Notes.git
git push -u origin main

========================
git question by abhishek - day 11
=======================
to check remote location first, if git push not working
=git remote -v

2. clone vs fork
3. branching
= git branch division (or)
git checkout -b division
git checkout division

git checkout main (to change branch)

for git merge
= git merge , git rebase , git cherry-pick

to see the changes in division branch
=git log division
copy the commit id 

to merge into main branch
= git cherry-pick (commit id)
git merge main

to delete branch
= git branch -d division

git log --oneline (to see log in oneline)

git merge vs git rebase
= both will merge the commit, but with rebase you will get linear commits,
which is not pssible with git merge, it will always show in top

 git merge is a way of combining changes from one branch (source branch)
 into another branch (target branch) where as git 
 rebase is a way of moving the changes from one 
 branch onto another branch

==================
git branch strategy - day 10
==================

1. git fetch vs git pull
=git fetch is the command that tells your local git to 
retrieve the latest meta-data info from the original 
(yet doesn't do any file transferring. It's more like
 just checking to see if there are any changes available).
 git pull on the other hand does that AND brings 
 (copy) those changes from the remote repository
 
2. git diff vs git status
=git status only tells you the state of your file changes, 
git diff tells you the exact changes

3. what is .git folder deleted?
= the information saved by Git will be lost, and the
 directory will no longer act as a Git repository.
 
 
 
4. git stash, git stash apply, stash pop, stash drop
=Suppose we have stashed some changes and want to apply
 those saved in the stash. We can remove the stash using 
 the pop flag with the git stash command (altogether git
 stash pop command). The command will apply the stashed 
 changes, and along with that, it will truncate the 
 stashed files.
 
=git stash apply (stash(0))
git stash = to stash an item
git stash clear = to clear stash item
git stash list = to see stash list

5. git revert vs git reset
=git reset = before commit. undo the from git add 
git revert = after commit, undo last commit and commit previous one
= git revert (commit id)

it does not delete any data in the process instead rather
git creates a new commit with the included files reverted 
to their previous state. so your version control history
moves forward while the state of your file move backward.

6. can you recover a deleted branch?
=

7. how to revert bad commit which is already pushed?
=git revert <commit_hash>

8. git reflog?
it will store only 90 days data in local drive
= git log like records
git reflog show main(master branch)


9. how to delete a branch?
=Delete a branch with git branch -d <branch> . 
The -d option will delete the branch only if it
 has already been pushed and merged with the remote 
 branch. Use -D instead if you want to force the
 branch to be deleted
 
10. command to merge two branch
=

11. coomand to push and pull chnages in git
=

12. rollback the last commit in git
= git revert (commit id)

13. remove untracked files
= git clean -n(dry run)
git clean -f (forcefully)

14. tag
git tag -a important -m "important message"
to see tag list
=git tag
git show (tag name) = to see particular commit
gi tag -d (tag name) = delete a tag

































































