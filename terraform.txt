terraform
=============
create from exsisting configuration

provider "aws" {
  region = "ap-south-1"
}
import {
	id = "i-06a247ffae30bbd0d"
	to = aws_instances.example
}
terraform init
terraform plan -generate-config-out=generated_resources.tf

** copy config and paste it in main.tf file and 
delete generated_resources file

terraform import aws_instance.example.i-06a247ffae30bbd0d









===================================

provider "aws" {
  region = "ap-south-1"
}

resource "aws_instance" "name" {
  ami = "ami-o0979"
  keypair = "rt-03"
  instance_type = var.instance_type
  availability_zone = "ap-south-1a" 
  subnet_id = aws_subnet.demo_subnet.id
  vpc_security_group_ids = aws_security_group.demo-vpc-sg
}

resource "aws_vpc" "demo_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "demo_subnet" {
  vpc_id     = aws_vpc.demo_vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "Main"
  }
}

resource "aws_internet_gateway" "demo.igw" {
  vpc_id = aws_vpc.demo_vpc.id

  tags = {
    Name = "main"
  }
}

resource "aws_route_table" "demo_rt" {
  vpc_id = aws_vpc.demo_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.demo_igw.id
  }


  tags = {
    Name = "demo_rt"
  }
}

resource "aws_route_table_association" "ademo_rt_assc" {
  subnet_id      = aws_subnet.demo_subnet.id
  route_table_id = aws_route_table.demo_rt.id
}

# security group
resource "aws_security_group" "demo-vpc-sg" {
  name        = "demo-vpc-sg"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.demo-vpc.id

  ingress {
    description      = "TLS from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}






=========================================
variable file(variable.tf) (chnge the name
 in main terraform file as var.name)
--------------
variable "location" {
  default = "ap-south-1"
}

variable "os_name"{
  default = "ami-o097"
}

variable "instance_type" {
  default = "t2.small"
}


===============================
setup kubernetes using terraform
install kubectl 
curl -0 https://...../kubectl 

chmod +x kubectl
mv kubectl /usr/local/bin
kubectl get all
aws configure
(add aws credentials)

aws eks update-kubeconfig --region ap-south-1 --name ed-eks-01

kubectl get nodes




terminal
==========
terraform init
terraform plan (dry run)
terraform apply --auto-approve

=========================================
 what is terraform state file?
 what is backend terraform file?
 how to use terraform state file in a team?
 



























